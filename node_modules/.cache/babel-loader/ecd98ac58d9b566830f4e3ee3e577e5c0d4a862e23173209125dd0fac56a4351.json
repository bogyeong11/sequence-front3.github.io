{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\sequence-front3.github.io\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport BASE_URL from './config.js'; // ✅ API URL 가져오기\nimport '../styles/auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n\n  // 입력값 변경 핸들러\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 로그인 요청 처리\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://sequence.agong.store/api/login`, {\n        // ✅ URL 수정\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', result.token);\n        alert('로그인 성공!');\n        navigate('/'); // 홈으로 이동\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"로그인 오류:\", error);\n      alert(\"서버 오류 발생\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"\\uC544\\uC774\\uB514\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OYae9yi3e5wk8OUi6JXr0Cew6cI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Navbar","BASE_URL","jsxDEV","_jsxDEV","Login","_s","navigate","formData","setFormData","username","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","token","alert","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/sequence-front3.github.io/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport BASE_URL from './config.js'; // ✅ API URL 가져오기\r\nimport '../styles/auth.css';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n\r\n  // 입력값 변경 핸들러\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 로그인 요청 처리\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`https://sequence.agong.store/api/login`, {  // ✅ URL 수정\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        localStorage.setItem('token', result.token);\r\n        alert('로그인 성공!');\r\n        navigate('/'); // 홈으로 이동\r\n      } else {\r\n        alert(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"로그인 오류:\", error);\r\n      alert(\"서버 오류 발생\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <section className=\"auth-container\">\r\n        <h1>로그인</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" name=\"username\" placeholder=\"아이디\" onChange={handleChange} required />\r\n          <input type=\"password\" name=\"password\" placeholder=\"비밀번호\" onChange={handleChange} required />\r\n          <button type=\"submit\">로그인</button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}